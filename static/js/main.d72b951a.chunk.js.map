{"version":3,"sources":["components/ModalLogin/ModalLogin.tsx","store/ducks/tweets/actionsCreators/actionCreators.ts","components/Tweet.tsx","store/ducks/tweets/contracts/types.ts","store/ducks/tweets/selectors.ts","components/AddedTweet.tsx","components/NavBar.tsx","components/SearchFormInput/SerachFormInput.tsx","store/ducks/tags/actionsCreators/actionCreators.ts","components/Thems.tsx","components/RecomendFollow.tsx","pages/Home/theme.ts","store/ducks/tags/contracts/types.ts","store/ducks/tags/selectors.ts","store/ducks/recomendUsers/contracts/types.ts","store/ducks/recomendUsers/selectors.ts","store/ducks/recomendUsers/actionsCreators/actionCreators.ts","store/ducks/tweetSelect/actionsCreators/actionCreators.ts","store/ducks/tweetSelect/contracts/types.ts","store/ducks/tweetSelect/selectors.ts","pages/Home/components/FullTweet.tsx","pages/Home/Home.tsx","pages/pageEnter/PageEnter.tsx","pages/Signin/Signin.tsx","App.tsx","theme.ts","store/ducks/recomendUsers/reduser.ts","store/ducks/tags/reduser.ts","store/ducks/tweets/reduser.ts","store/ducks/tweetSelect/reduser.ts","store/rootReducer.ts","services/api/fetchApi.ts","store/ducks/recomendUsers/saga.ts","store/ducks/tags/saga.ts","store/ducks/tweets/saga.ts","store/ducks/tweetSelect/saga.ts","store/sagas.ts","store/store.ts","index.tsx"],"names":["ModalLogin","TweetsActionsType","closeModalLogin","useState","useEmail","setUseEmail","React","monthValue","name","stateInput","setStateInput","dayValue","stateInputDay","setStateInputDay","yearValue","stateInputYear","setStateInputYear","className","onClick","TextField","label","variant","fullWidth","FormControl","InputLabel","htmlFor","Select","native","value","onChange","event","target","inputProps","to","Button","color","Tweet","classes","text","user","id","Paper","twittWrapper","Grid","container","spacing","item","xs","twittAvatar","Avatar","alt","username","src","avatar","tweetAvatar","twittInfo","Typography","fullname","IconButton","twittTitleButton","style","textDecoration","Box","iconBox","iconBoxItem","LoadingState","AddLoadingState","setTweets","payload","type","SET_TWEETS","addTweets","ADD_TWEETS","setStatusTweets","SET_STATUS","setStatusAdd","SET_STATUS_ADD","fetchTweets","FETCH_TWEETS","selectTweets","state","tweets","selectTweetsItem","selectLoadingState","loadingState","selectIsLoadingTweets","LOADING","selectIsErrorTweets","ERROR","addLoadingState","addTweetState","addIsLoadingTweets","addIsErrorTweets","AddedTweet","rowsMax","rowsMin","dispatch","useDispatch","inputFeild","setInputFeild","isOpen","setIsOpen","addIsLoadingTweet","useSelector","addIsErrorTweet","textLimiPercent","Math","floor","length","handleAddTweet","FETCH_ADD_TWEETS","Snackbar","anchorOrigin","vertical","horizontal","open","onClose","message","autoHideDuration","addWrapper","addHeader","addHeaderAvatar","TextareaAutosize","e","currentTarget","placeholder","addHeaderInput","addFooter","addProgress","fontSize","addProgressBlockWrapper","CircularProgress","addProgressBlockAbs","addProgressBlock","undefined","Tooltip","title","disabled","NavBar","setOpen","navBarList","navBarIcon","navBarIconButton","navBarLabel","btnNavbar","Modal","modalWrapper","SerachFormInput","TagsActionsType","Input","startAdornment","InputAdornment","position","Thems","tag","themsTweet","tagsWraperLink","FETCH_FILTER_TWETS","themsTweetTitle","themsTweetSubTitle","RecomendFollow","recomendBlock","recomendBlockInfo","useHomeStyle","makeStyles","home","width","maxWidth","margin","padding","height","gridContainer","twitterPaper","borderRadius","borderTop","boorderBottom","homeTitleWrapper","borderRight","borderLeft","homeTitle","display","justifyContent","alignItems","fontWeight","homeTitleIcon","searchUnderline","borderBottom","tweetUserInfo","marginBottom","tweetUserInfoAvatar","marginRight","transition","cursor","backgroundColor","paddingRight","userTwetInfo","tweetUserName","userTwittText","lineHeight","top","right","left","userIconBox","listStyle","li","textAlign","marginTop","paddingLeft","aside","thems","themsTitle","marginLeft","flexGrow","outline","resize","border","zIndex","transform","boxShadow","tweetTitle","paddingTop","setStatusTags","selectTags","tags","selectTagsItem","selectIsLoadingTags","selectIsErrorTags","RecomendUserActionsType","selectRecomendUsers","recommendUsers","selectRecomendUsersItem","selectIsLoadingRecomend","selectIsErrorRecomend","SelectTweetActionsType","setStatusRecomendUser","setSelectTweet","SET_SELECT_TWEET","selectTwet","selectTweet","selectTweetItem","selectIsLoadingSelectTweet","FullTweet","useParams","console","log","isLoadingSelectTweet","useEffect","FETCH_SELECT_TWEET","paddingBottom","Home","isLoading","isLoadingTag","isLoadingRecommendUser","isErrorTweets","isErrorTags","isErrorRecommendUsers","FETCH_TAGS","FETCH_RECOMEND_USER","sm","path","exact","map","_id","reverse","count","PageEnter","onSubmit","preventDefault","useStyle","wrapper","blueSide","overflow","blueSideWrapper","blueSideTwitterBG","blueSideList","blueSideListIcon","loginSide","twitterIcon","loginSideWrapper","loginSideTitle","loginSideBtn","loginSideSubtitle","linkBtn","Signin","openLogin","setOpenLogin","App","component","theme","createMuiTheme","typography","fontFamily","join","palette","primary","main","dark","contrastText","secondary","error","red","A400","background","default","shadows","overrides","MuiButton","root","textTransform","textPrimary","outlinedPrimary","borderColor","MuiFilledInput","underline","borderBottomWidth","input","MuiDialog","paper","MuiDialogActions","MuiDialogTitle","initialTweetsState","NEVER","recomendUserReduser","produce","draft","action","SET_RECOMEND_USER","LOADED","tagsReduser","SET_TAGS","tweetsReduser","push","initialTweetState","selectTweetReduser","rootReduser","combineReducers","fetchApi","axios","get","then","data","post","fetchRecomendUserRequest","watchRecomendUserAsync","call","put","takeEvery","fetchTagsRequest","watchTagsAsync","fetchTweetsRequest","addTweetsRequest","fetchFilterTweetsRequest","watchTweetsAsync","random","toString","substr","items","fetchSelectTweetRequest","watchSelectTweetAsync","tweetId","rootSaga","all","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","basename","process","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.d72b951a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport \"./modal.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface ModalLoginType {\r\n    closeModalLogin: () => void;\r\n}\r\n\r\nfunction ModalLogin({ closeModalLogin }: ModalLoginType) {\r\n    const [useEmail, setUseEmail] = useState(false);\r\n\r\n    const [stateInput, setStateInput] = React.useState<{\r\n        monthValue: string | number;\r\n        name: string;\r\n    }>({\r\n        monthValue: \"\",\r\n        name: \"\",\r\n    });\r\n    const [stateInputDay, setStateInputDay] = React.useState<{\r\n        dayValue: string | number;\r\n        name: string;\r\n    }>({\r\n        dayValue: \"\",\r\n        name: \"\",\r\n    });\r\n    const [stateInputYear, setStateInputYear] = React.useState<{\r\n        yearValue: string | number;\r\n        name: string;\r\n    }>({\r\n        yearValue: \"\",\r\n        name: \"\",\r\n    });\r\n\r\n    const handleChangeMonth = (\r\n        event: React.ChangeEvent<{ name?: string; value: unknown }>\r\n    ) => {\r\n        const name = event.target.name as keyof typeof stateInput;\r\n        setStateInput({\r\n            ...stateInput,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleChangeDay = (\r\n        event: React.ChangeEvent<{ name?: string; value: unknown }>\r\n    ) => {\r\n        const name = event.target.name as keyof typeof stateInput;\r\n        setStateInputDay({\r\n            ...stateInputDay,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n    const handleChangeYear = (\r\n        event: React.ChangeEvent<{ name?: string; value: unknown }>\r\n    ) => {\r\n        const name = event.target.name as keyof typeof stateInput;\r\n        setStateInputYear({\r\n            ...stateInputYear,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleUseEmail: () => void = () => {\r\n        setUseEmail(!useEmail);\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal__cnotainer\">\r\n                <div className=\"modal__cnotainer-closeIcon\">\r\n                    <HighlightOffIcon onClick={closeModalLogin} />\r\n                </div>\r\n\r\n                <div className=\"modal__cnotainer-icon\">\r\n                    <TwitterIcon />\r\n                </div>\r\n                <h1 className=\"modal__cnotainer-title\">\r\n                    Создайте учетную запись\r\n                </h1>\r\n                <div className=\"modal__cnotainer-input\">\r\n                    <TextField label=\"Имя\" variant=\"outlined\" fullWidth />\r\n                </div>\r\n                {useEmail ? (\r\n                    <div className=\"modal__cnotainer-input\">\r\n                        <TextField\r\n                            label=\"Адрес электронной почты\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"modal__cnotainer-input\">\r\n                        <TextField\r\n                            label=\"Телефон\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        />\r\n                    </div>\r\n                )}\r\n                <div\r\n                    className=\"modal__cnotainer-useEmail\"\r\n                    onClick={handleUseEmail}\r\n                >\r\n                    {useEmail\r\n                        ? \"Использовать телефон\"\r\n                        : \"Использовать электронную почту\"}\r\n                </div>\r\n                <p className=\"modal__cnotainer-text\">\r\n                    <span>Дата рождения</span> Эта информация не будет\r\n                    общедоступной. Подтвердите свой возраст, даже если эта\r\n                    учетная запись предназначена для компании, домашнего\r\n                    животного и т. д.\r\n                </p>\r\n                <div className=\"modal__container-selectBlock\">\r\n                    <FormControl variant=\"outlined\">\r\n                        <InputLabel htmlFor=\"outlined-age-native-simple\">\r\n                            Месяц\r\n                        </InputLabel>\r\n                        <Select\r\n                            native\r\n                            value={stateInput.monthValue}\r\n                            onChange={handleChangeMonth}\r\n                            label=\"Age\"\r\n                            inputProps={{\r\n                                name: \"monthValue\",\r\n                            }}\r\n                        >\r\n                            <option aria-label=\"None\" value=\"\" />\r\n                            <option value={0}>Январь</option>\r\n                            <option value={1}>Февраль</option>\r\n                            <option value={2}>Март</option>\r\n                            <option value={3}>Апрель</option>\r\n                            <option value={4}>Май</option>\r\n                            <option value={5}>Июнь</option>\r\n                            <option value={6}>Июль</option>\r\n                            <option value={7}>Август</option>\r\n                            <option value={8}>Сентябрь</option>\r\n                            <option value={9}>Октябрь</option>\r\n                            <option value={10}>Ноябрь</option>\r\n                            <option value={11}>Декабрь</option>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl variant=\"outlined\">\r\n                        <InputLabel htmlFor=\"outlined-age-native-simple\">\r\n                            День\r\n                        </InputLabel>\r\n                        <Select\r\n                            native\r\n                            value={stateInputDay.dayValue}\r\n                            onChange={handleChangeDay}\r\n                            label=\"Age\"\r\n                            inputProps={{\r\n                                name: \"dayValue\",\r\n                            }}\r\n                        >\r\n                            <option aria-label=\"None\" value=\"\" />\r\n                            <option value={0}>1</option>\r\n                            <option value={1}>2</option>\r\n                            <option value={2}>3</option>\r\n                            <option value={3}>4</option>\r\n                            <option value={4}>5</option>\r\n                            <option value={5}>6</option>\r\n                            <option value={6}>7</option>\r\n                            <option value={7}>8</option>\r\n                            <option value={8}>9</option>\r\n                            <option value={9}>10</option>\r\n                            <option value={10}>11</option>\r\n                            <option value={11}>12</option>\r\n                            <option value={12}>13</option>\r\n                            <option value={13}>14</option>\r\n                            <option value={14}>15</option>\r\n                            <option value={15}>16</option>\r\n                            <option value={16}>17</option>\r\n                            <option value={17}>18</option>\r\n                            <option value={18}>19</option>\r\n                            <option value={19}>20</option>\r\n                            <option value={20}>21</option>\r\n                            <option value={21}>22</option>\r\n                            <option value={22}>23</option>\r\n                            <option value={23}>24</option>\r\n                            <option value={24}>25</option>\r\n                            <option value={25}>26</option>\r\n                            <option value={26}>27</option>\r\n                            <option value={27}>28</option>\r\n                            <option value={28}>29</option>\r\n                            <option value={29}>30</option>\r\n                            <option value={30}>31</option>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl variant=\"outlined\">\r\n                        <InputLabel htmlFor=\"outlined-age-native-simple\">\r\n                            Год\r\n                        </InputLabel>\r\n                        <Select\r\n                            native\r\n                            value={stateInputYear.yearValue}\r\n                            onChange={handleChangeYear}\r\n                            label=\"Age\"\r\n                            inputProps={{\r\n                                name: \"yearValue\",\r\n                            }}\r\n                        >\r\n                            <option aria-label=\"None\" value=\"\" />\r\n                            <option value={0}>1980</option>\r\n                            <option value={1}>1981</option>\r\n                            <option value={2}>1982</option>\r\n                            <option value={3}>1983</option>\r\n                            <option value={4}>1984</option>\r\n                            <option value={5}>1985</option>\r\n                            <option value={6}>1986</option>\r\n                            <option value={7}>1987</option>\r\n                            <option value={8}>1988</option>\r\n                            <option value={9}>1989</option>\r\n                            <option value={10}>1990</option>\r\n                            <option value={11}>1991</option>\r\n                            <option value={12}>1992</option>\r\n                            <option value={13}>1993</option>\r\n                            <option value={14}>1994</option>\r\n                            <option value={15}>1995</option>\r\n                            <option value={16}>1996</option>\r\n                            <option value={17}>1997</option>\r\n                            <option value={18}>1998</option>\r\n                            <option value={19}>1999</option>\r\n                            <option value={20}>2000</option>\r\n                            <option value={21}>2001</option>\r\n                            <option value={22}>2002</option>\r\n                            <option value={23}>2003</option>\r\n                            <option value={24}>2004</option>\r\n                            <option value={25}>2005</option>\r\n                            <option value={26}>2006</option>\r\n                            <option value={27}>2007</option>\r\n                            <option value={28}>2008</option>\r\n                            <option value={29}>2009</option>\r\n                            <option value={30}>2010</option>\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n                <div className=\"modal__container-btn\">\r\n                    <Link to=\"/home\">\r\n                        <Button variant=\"contained\" color=\"primary\" fullWidth>\r\n                            Войти\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ModalLogin;\r\n","import { Action } from \"redux\";\r\nimport { AddLoadingState, LoadingState, Tweets } from \"../contracts/types\";\r\n\r\nexport enum TweetsActionsType {\r\n    SET_TWEETS = \"tweets/SET_TWEETS\",\r\n    FETCH_ADD_TWEETS = \"tweets/FETCH_ADD_TWEETS\",\r\n    ADD_TWEETS = \"tweets/ADD_TWEETS\",\r\n    FETCH_TWEETS = \"tweets/FETCH_TWEETS\",\r\n    FETCH_FILTER_TWETS = \"tweets/FETCH_FILTER_TWEETS\",\r\n    SET_STATUS = \"tweets/SET_STATUS\",\r\n    SET_STATUS_ADD = \"tweets/SET_STATUS_ADD\",\r\n    FILTER_TWETS = \"tweets/FILTER_TWETS\",\r\n}\r\n\r\nexport interface SetTweetsActionInterface extends Action<TweetsActionsType> {\r\n    type: TweetsActionsType.SET_TWEETS;\r\n    payload: Tweets[];\r\n}\r\n\r\nexport interface FetchAddTweetsActionInterface\r\n    extends Action<TweetsActionsType> {\r\n    type: TweetsActionsType.FETCH_ADD_TWEETS;\r\n    payload: string;\r\n}\r\nexport interface FetcFilterTweetsActionInterface\r\n    extends Action<TweetsActionsType> {\r\n    type: TweetsActionsType.FETCH_FILTER_TWETS;\r\n    payload: string;\r\n}\r\nexport interface AddTweetsActionInterface extends Action<TweetsActionsType> {\r\n    type: TweetsActionsType.ADD_TWEETS;\r\n    payload: Tweets;\r\n}\r\n\r\nexport interface FetchTweetsActionInterface extends Action<TweetsActionsType> {\r\n    type: TweetsActionsType.FETCH_TWEETS;\r\n}\r\nexport interface SetStatusActionInterface extends Action<TweetsActionsType> {\r\n    type: TweetsActionsType.SET_STATUS;\r\n    payload: LoadingState;\r\n}\r\nexport interface SetStatusAddActionInterface extends Action<TweetsActionsType> {\r\n    type: TweetsActionsType.SET_STATUS_ADD;\r\n    payload: AddLoadingState;\r\n}\r\n\r\nexport const setTweets = (payload: Tweets[]): SetTweetsActionInterface => ({\r\n    type: TweetsActionsType.SET_TWEETS,\r\n    payload,\r\n});\r\n\r\nexport const fetchAddTweets = (\r\n    payload: string\r\n): FetchAddTweetsActionInterface => ({\r\n    type: TweetsActionsType.FETCH_ADD_TWEETS,\r\n    payload,\r\n});\r\nexport const fetchFilterTweets = (\r\n    payload: string\r\n): FetcFilterTweetsActionInterface => ({\r\n    type: TweetsActionsType.FETCH_FILTER_TWETS,\r\n    payload,\r\n});\r\nexport const addTweets = (payload: Tweets): AddTweetsActionInterface => ({\r\n    type: TweetsActionsType.ADD_TWEETS,\r\n    payload,\r\n});\r\n\r\nexport const setStatusTweets = (\r\n    payload: LoadingState\r\n): SetStatusActionInterface => ({\r\n    type: TweetsActionsType.SET_STATUS,\r\n    payload,\r\n});\r\nexport const setStatusAdd = (\r\n    payload: AddLoadingState\r\n): SetStatusAddActionInterface => ({\r\n    type: TweetsActionsType.SET_STATUS_ADD,\r\n    payload,\r\n});\r\nexport const fetchTweets = (): FetchTweetsActionInterface => ({\r\n    type: TweetsActionsType.FETCH_TWEETS,\r\n});\r\n\r\nexport type TweetsAction =\r\n    | SetTweetsActionInterface\r\n    | FetchTweetsActionInterface\r\n    | SetStatusActionInterface\r\n    | FetchAddTweetsActionInterface\r\n    | AddTweetsActionInterface\r\n    | SetStatusAddActionInterface\r\n    | FetcFilterTweetsActionInterface;\r\n","import React from \"react\";\r\nimport { Typography, Paper, Box, Avatar, Grid } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport DotsIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport CommentIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport RetwittIcon from \"@material-ui/icons/Repeat\";\r\nimport LikeIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport { useHomeStyle } from \"../pages/Home/theme\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface TypeTweet {\r\n    id: string;\r\n    text: string;\r\n    classes: ReturnType<typeof useHomeStyle>;\r\n    user: {\r\n        fullname: string;\r\n        username: string;\r\n        avatar: string;\r\n    };\r\n}\r\n\r\nconst Tweet: React.FC<TypeTweet> = ({\r\n    classes,\r\n    text,\r\n    user,\r\n    id,\r\n}: TypeTweet): React.ReactElement => {\r\n    return (\r\n        <Paper variant=\"outlined\" className={classes.twittWrapper}>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={2} className={classes.twittAvatar}>\r\n                    <Avatar\r\n                        alt={`user avatar ${user.username}`}\r\n                        src={user.avatar}\r\n                        className={classes.tweetAvatar}\r\n                    >\r\n                        A\r\n                    </Avatar>\r\n                </Grid>\r\n                <Grid item xs={10} className={classes.twittInfo}>\r\n                    <Typography>\r\n                        <b>{user.fullname}</b> {user.username}\r\n                        <span>-</span>\r\n                        <span>1 ч</span>\r\n                    </Typography>\r\n\r\n                    <IconButton className={classes.twittTitleButton}>\r\n                        <DotsIcon />\r\n                    </IconButton>\r\n                    <Link\r\n                        style={{ color: \"inherit\", textDecoration: \"none\" }}\r\n                        to={`home/tweet/${id}`}\r\n                    >\r\n                        <Typography>{text}</Typography>\r\n                    </Link>\r\n                    <Box className={classes.iconBox}>\r\n                        <div className={classes.iconBoxItem}>\r\n                            <IconButton>\r\n                                <CommentIcon />\r\n                            </IconButton>\r\n                            <span>1</span>\r\n                        </div>\r\n                        <div className={classes.iconBoxItem}>\r\n                            <IconButton>\r\n                                <RetwittIcon />\r\n                            </IconButton>\r\n                            <span>116</span>\r\n                        </div>\r\n                        <div className={classes.iconBoxItem}>\r\n                            <IconButton>\r\n                                <LikeIcon />\r\n                            </IconButton>\r\n                            <span>100</span>\r\n                        </div>\r\n                        <div className={classes.iconBoxItem}>\r\n                            <IconButton>\r\n                                <ShareIcon />\r\n                            </IconButton>\r\n                            <span>15</span>\r\n                        </div>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default Tweet;\r\n","export enum LoadingState {\r\n    LOADED = \"LOADED\",\r\n    LOADING = \"LOADING\",\r\n    ERROR = \"ERROR\",\r\n    NEVER = \"NEVER\",\r\n}\r\nexport enum AddLoadingState {\r\n    LOADING = \"LOADING\",\r\n    ERROR = \"ERROR\",\r\n    NEVER = \"NEVER\",\r\n}\r\n\r\nexport interface Tweets {\r\n    _id: string;\r\n    text: string;\r\n    tag: string;\r\n    user: {\r\n        fullname: string;\r\n        username: string;\r\n        avatar: string;\r\n    };\r\n}\r\n\r\nexport interface TweetsType {\r\n    item: Tweets[];\r\n    loadingState: LoadingState;\r\n    addTweetState: AddLoadingState;\r\n}\r\n","import { RootState } from \"../../store\";\r\nimport { AddLoadingState, LoadingState } from \"./contracts/types\";\r\n\r\nconst selectTweets = (state: RootState) => state.tweets;\r\n\r\n//select loading add tweet\r\nexport const selectTweetsItem = (state: RootState) => selectTweets(state).item;\r\n\r\nexport const selectLoadingState = (state: RootState) =>\r\n    selectTweets(state).loadingState;\r\n\r\nexport const selectIsLoadingTweets = (state: RootState): boolean =>\r\n    selectLoadingState(state) === LoadingState.LOADING;\r\n\r\nexport const selectIsLoadedTweets = (state: RootState): boolean =>\r\n    selectLoadingState(state) === LoadingState.LOADED;\r\n\r\nexport const selectIsErrorTweets = (state: RootState): boolean =>\r\n    selectLoadingState(state) === LoadingState.ERROR;\r\n\r\n//add new tweet state selector\r\n\r\nexport const addLoadingState = (state: RootState) =>\r\n    selectTweets(state).addTweetState;\r\n\r\nexport const addIsLoadingTweets = (state: RootState): boolean =>\r\n    addLoadingState(state) === AddLoadingState.LOADING;\r\n\r\nexport const addIsErrorTweets = (state: RootState): boolean =>\r\n    addLoadingState(state) === AddLoadingState.ERROR;\r\n","import React from \"react\";\r\nimport { Avatar, Box, Button, IconButton, Snackbar } from \"@material-ui/core\";\r\nimport { useHomeStyle } from \"../pages/Home/theme\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nimport SmileIcon from \"@material-ui/icons/SentimentSatisfied\";\r\nimport PictureIcon from \"@material-ui/icons/CropOriginal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchAddTweets } from \"../store/ducks/tweets/actionsCreators/actionCreators\";\r\nimport {\r\n    addIsErrorTweets,\r\n    addIsLoadingTweets,\r\n} from \"../store/ducks/tweets/selectors\";\r\n\r\ninterface TypeAddedTweet {\r\n    classes: ReturnType<typeof useHomeStyle>;\r\n    rowsMax?: number;\r\n    rowsMin?: number;\r\n}\r\n\r\nconst AddedTweet: React.FC<TypeAddedTweet> = ({\r\n    classes,\r\n    rowsMax,\r\n    rowsMin,\r\n}: TypeAddedTweet): React.ReactElement => {\r\n    const dispatch = useDispatch();\r\n    const [inputFeild, setInputFeild] = React.useState<string>(\"\");\r\n    const [isOpen, setIsOpen] = React.useState<boolean>(false);\r\n\r\n    const addIsLoadingTweet = useSelector(addIsLoadingTweets);\r\n    const addIsErrorTweet = useSelector(addIsErrorTweets);\r\n\r\n    const MAX_LENGTH = 290;\r\n\r\n    const textLimiPercent = Math.floor((inputFeild.length / MAX_LENGTH) * 100);\r\n\r\n    const handleChange = (e: React.FormEvent<HTMLTextAreaElement>) => {\r\n        if (e.currentTarget) {\r\n            setInputFeild(e.currentTarget.value);\r\n        }\r\n    };\r\n\r\n    const handleClose = (): void => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const handleAddTweet = (): void => {\r\n        dispatch(fetchAddTweets(inputFeild));\r\n        setInputFeild(\"\");\r\n\r\n        setIsOpen(true);\r\n    };\r\n    return (\r\n        <>\r\n            {addIsErrorTweet ? (\r\n                <Snackbar\r\n                    anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n                    open={isOpen}\r\n                    onClose={handleClose}\r\n                    message={\"Произошла ошибка добавления твита\"}\r\n                    autoHideDuration={2000}\r\n                    key=\"123\"\r\n                />\r\n            ) : (\r\n                false\r\n            )}\r\n\r\n            <Box className={classes.addWrapper}>\r\n                <div className={classes.addHeader}>\r\n                    <Avatar\r\n                        alt=\"avatar\"\r\n                        src=\"https://images.unsplash.com/photo-1464746133101-a2c3f88e0dd9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTl8fG1hbnxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n                        className={classes.addHeaderAvatar}\r\n                    >\r\n                        U\r\n                    </Avatar>\r\n                    <TextareaAutosize\r\n                        onChange={handleChange}\r\n                        value={inputFeild}\r\n                        placeholder=\"Что происходит?\"\r\n                        rowsMin={rowsMin}\r\n                        rowsMax={rowsMax}\r\n                        className={classes.addHeaderInput}\r\n                    />\r\n                </div>\r\n                <div className={classes.addFooter}>\r\n                    <div>\r\n                        <IconButton color=\"primary\">\r\n                            <PictureIcon />\r\n                        </IconButton>\r\n                        <IconButton color=\"primary\">\r\n                            <SmileIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className={classes.addProgress}>\r\n                        {inputFeild.length > 0 ? (\r\n                            <>\r\n                                <div style={{ color: \"grey\", fontSize: 14 }}>\r\n                                    {MAX_LENGTH - inputFeild.length}\r\n                                </div>\r\n                                <div\r\n                                    className={classes.addProgressBlockWrapper}\r\n                                >\r\n                                    <CircularProgress\r\n                                        className={classes.addProgressBlockAbs}\r\n                                        variant=\"determinate\"\r\n                                        value={100}\r\n                                    />\r\n                                    <CircularProgress\r\n                                        className={classes.addProgressBlock}\r\n                                        variant=\"determinate\"\r\n                                        value={\r\n                                            textLimiPercent > 100\r\n                                                ? 100\r\n                                                : textLimiPercent\r\n                                        }\r\n                                        style={\r\n                                            textLimiPercent >= 100\r\n                                                ? { color: \"red\" }\r\n                                                : undefined\r\n                                        }\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        ) : null}\r\n                        <>\r\n                            {textLimiPercent >= 100 ? (\r\n                                <Tooltip title=\"Невозможно отправить твит\">\r\n                                    <div>\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            variant=\"contained\"\r\n                                            disabled\r\n                                            onClick={handleAddTweet}\r\n                                        >\r\n                                            Tweet\r\n                                        </Button>\r\n                                    </div>\r\n                                </Tooltip>\r\n                            ) : !addIsLoadingTweet ? (\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    variant=\"contained\"\r\n                                    onClick={handleAddTweet}\r\n                                    disabled={!inputFeild}\r\n                                >\r\n                                    Tweet\r\n                                </Button>\r\n                            ) : (\r\n                                <span>\r\n                                    <CircularProgress />\r\n                                </span>\r\n                            )}\r\n                        </>\r\n                    </div>\r\n                </div>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddedTweet;\r\n","import React from \"react\";\r\n\r\nimport BookmarkBorderOutlinedIcon from \"@material-ui/icons/BookmarkBorderOutlined\";\r\nimport EmailOutlinedIcon from \"@material-ui/icons/EmailOutlined\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport NotificationsOutlinedIcon from \"@material-ui/icons/NotificationsOutlined\";\r\nimport ListAltRoundedIcon from \"@material-ui/icons/ListAltRounded\";\r\nimport SearchRoundedIcon from \"@material-ui/icons/SearchRounded\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { useHomeStyle } from \"../pages/Home/theme\";\r\nimport AddedTweet from \"./AddedTweet\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchTweets } from \"../store/ducks/tweets/actionsCreators/actionCreators\";\r\n\r\ninterface TypeNavbar {\r\n    classes: ReturnType<typeof useHomeStyle>;\r\n}\r\n\r\nconst NavBar: React.FC<TypeNavbar> = ({\r\n    classes,\r\n}: TypeNavbar): React.ReactElement => {\r\n    const dispatch = useDispatch();\r\n    const [open, setOpen] = React.useState<boolean>(false);\r\n    const backHome = (): void => {\r\n        dispatch(fetchTweets());\r\n    };\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <>\r\n            <ul className={classes.navBarList}>\r\n                <li>\r\n                    <Link to=\"/home\" onClick={backHome}>\r\n                        <IconButton color=\"primary\">\r\n                            <TwitterIcon\r\n                                color=\"primary\"\r\n                                className={classes.navBarIcon}\r\n                            />\r\n                        </IconButton>\r\n                    </Link>\r\n                </li>\r\n\r\n                <li>\r\n                    <IconButton className={classes.navBarIconButton}>\r\n                        <SearchRoundedIcon className={classes.navBarIcon} />\r\n                        <Typography\r\n                            className={classes.navBarLabel}\r\n                            variant=\"h6\"\r\n                        >\r\n                            Поиск\r\n                        </Typography>\r\n                    </IconButton>\r\n                </li>\r\n                <li>\r\n                    <IconButton className={classes.navBarIconButton}>\r\n                        <NotificationsOutlinedIcon\r\n                            className={classes.navBarIcon}\r\n                        />\r\n                        <Typography\r\n                            className={classes.navBarLabel}\r\n                            variant=\"h6\"\r\n                        >\r\n                            Уведомления\r\n                        </Typography>\r\n                    </IconButton>\r\n                </li>\r\n                <li>\r\n                    <IconButton className={classes.navBarIconButton}>\r\n                        <EmailOutlinedIcon className={classes.navBarIcon} />\r\n                        <Typography\r\n                            className={classes.navBarLabel}\r\n                            variant=\"h6\"\r\n                        >\r\n                            Сообщения\r\n                        </Typography>\r\n                    </IconButton>\r\n                </li>\r\n                <li>\r\n                    <IconButton className={classes.navBarIconButton}>\r\n                        <BookmarkBorderOutlinedIcon\r\n                            className={classes.navBarIcon}\r\n                        />\r\n                        <Typography\r\n                            className={classes.navBarLabel}\r\n                            variant=\"h6\"\r\n                        >\r\n                            Закладки\r\n                        </Typography>\r\n                    </IconButton>\r\n                </li>\r\n                <li>\r\n                    <IconButton className={classes.navBarIconButton}>\r\n                        <ListAltRoundedIcon className={classes.navBarIcon} />\r\n                        <Typography\r\n                            className={classes.navBarLabel}\r\n                            variant=\"h6\"\r\n                        >\r\n                            Список\r\n                        </Typography>\r\n                    </IconButton>\r\n                </li>\r\n                <li>\r\n                    <IconButton className={classes.navBarIconButton}>\r\n                        <PersonOutlineOutlinedIcon\r\n                            className={classes.navBarIcon}\r\n                        />\r\n                        <Typography\r\n                            className={classes.navBarLabel}\r\n                            variant=\"h6\"\r\n                        >\r\n                            Профиль\r\n                        </Typography>\r\n                    </IconButton>\r\n                </li>\r\n                <li>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        className={classes.btnNavbar}\r\n                        onClick={handleOpen}\r\n                    >\r\n                        Твитнуть\r\n                    </Button>\r\n                </li>\r\n            </ul>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                <div className={classes.modalWrapper}>\r\n                    <AddedTweet classes={classes} rowsMax={15} rowsMin={15} />\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport SearchRoundedIcon from \"@material-ui/icons/SearchRounded\";\r\nimport { Input, InputAdornment } from \"@material-ui/core\";\r\n\r\nimport \"./searchForm.scss\";\r\n\r\nfunction SerachFormInput() {\r\n    return (\r\n        <div>\r\n            <Input\r\n                className=\"search__form-input\"\r\n                id=\"input-with-icon-adornment\"\r\n                placeholder={\"Поиск в Твиттере\"}\r\n                startAdornment={\r\n                    <InputAdornment position=\"start\">\r\n                        <SearchRoundedIcon className=\"search__form-input-icon\" />\r\n                    </InputAdornment>\r\n                }\r\n                fullWidth\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SerachFormInput;\r\n","import { Action } from \"redux\";\r\nimport { LoadingState, Tags } from \"../contracts/types\";\r\n\r\nexport enum TagsActionsType {\r\n    SET_TAGS = \"tags/SET_Tags\",\r\n    FETCH_TAGS = \"tags/FETCH_Tags\",\r\n    SET_STATUS = \"tags/SET_STATUS\",\r\n}\r\n\r\nexport interface SetTagsActionInterface extends Action<TagsActionsType> {\r\n    type: TagsActionsType.SET_TAGS;\r\n    payload: Tags[];\r\n}\r\n\r\nexport interface FetchTagsActionInterface extends Action<TagsActionsType> {\r\n    type: TagsActionsType.FETCH_TAGS;\r\n}\r\nexport interface SetStatusActionInterface extends Action<TagsActionsType> {\r\n    type: TagsActionsType.SET_STATUS;\r\n    payload: LoadingState;\r\n}\r\n\r\nexport const setTags = (payload: Tags[]): SetTagsActionInterface => ({\r\n    type: TagsActionsType.SET_TAGS,\r\n    payload,\r\n});\r\n\r\nexport const setStatusTags = (\r\n    payload: LoadingState\r\n): SetStatusActionInterface => ({\r\n    type: TagsActionsType.SET_STATUS,\r\n    payload,\r\n});\r\nexport const fetchTags = (): FetchTagsActionInterface => ({\r\n    type: TagsActionsType.FETCH_TAGS,\r\n});\r\n\r\nexport type TagsAction =\r\n    | SetTagsActionInterface\r\n    | FetchTagsActionInterface\r\n    | SetStatusActionInterface;\r\n","import { IconButton, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nimport { useHomeStyle } from \"../pages/Home/theme\";\r\nimport DotsIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchFilterTweets } from \"../store/ducks/tweets/actionsCreators/actionCreators\";\r\n\r\ninterface TypeTheme {\r\n    classes: ReturnType<typeof useHomeStyle>;\r\n    title: string;\r\n    tweets: number;\r\n    tag: string;\r\n}\r\n\r\nconst Thems: React.FC<TypeTheme> = ({\r\n    classes,\r\n    title,\r\n    tweets,\r\n    tag,\r\n}: TypeTheme): React.ReactElement => {\r\n    const dispatch = useDispatch();\r\n    const chooseTag = (): void => {\r\n        dispatch(fetchFilterTweets(tag));\r\n    };\r\n    return (\r\n        <div className={classes.themsTweet}>\r\n            <div className={classes.tagsWraperLink} onClick={chooseTag}>\r\n                <div>\r\n                    <Typography className={classes.themsTweetTitle}>\r\n                        {title}\r\n                    </Typography>\r\n                    <Typography className={classes.themsTweetSubTitle}>\r\n                        Твитов: {tweets}\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n            <IconButton>\r\n                <DotsIcon />\r\n            </IconButton>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Thems;\r\n","import { Avatar, IconButton, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useHomeStyle } from \"../pages/Home/theme\";\r\nimport AddedUserIcon from \"@material-ui/icons/PersonAddOutlined\";\r\n\r\ninterface TypeTheme {\r\n    classes: ReturnType<typeof useHomeStyle>;\r\n    avatar: string;\r\n    user: {\r\n        fullname: string;\r\n        username: string;\r\n    };\r\n}\r\n\r\nconst RecomendFollow: React.FC<TypeTheme> = ({\r\n    classes,\r\n    avatar,\r\n    user,\r\n}: TypeTheme): React.ReactElement => {\r\n    return (\r\n        <div className={classes.themsTweet}>\r\n            <div className={classes.recomendBlock}>\r\n                <Avatar alt={`user avatar ` + user.username} src={avatar}>\r\n                    A\r\n                </Avatar>\r\n                <div className={classes.recomendBlockInfo}>\r\n                    <Typography className={classes.themsTweetTitle}>\r\n                        {user.fullname}\r\n                    </Typography>\r\n                    <Typography className={classes.themsTweetSubTitle}>\r\n                        {user.username}\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n            <IconButton>\r\n                <AddedUserIcon />\r\n            </IconButton>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecomendFollow;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useHomeStyle = makeStyles(() => ({\r\n    home: {\r\n        width: \"100%\",\r\n        maxWidth: \"1230px\",\r\n        margin: \"0 auto\",\r\n        padding: \"0 10px\",\r\n        height: \"100vh\",\r\n    },\r\n    gridContainer: {\r\n        height: \"100vh\",\r\n    },\r\n    twitterPaper: {\r\n        borderRadius: \"0\",\r\n        borderTop: \"none\",\r\n        boorderBottom: \"none\",\r\n        height: \"100%\",\r\n    },\r\n    homeTitleWrapper: {\r\n        borderRight: \"none\",\r\n        borderLeft: \"none\",\r\n\r\n        borderRadius: \"0\",\r\n    },\r\n    homeTitle: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        padding: \"5px 15px\",\r\n        \"& h6\": {\r\n            fontWeight: \"700\",\r\n        },\r\n    },\r\n    homeTitleIcon: {\r\n        color: \"#1da1f2\",\r\n        fontSize: \"30px\",\r\n    },\r\n\r\n    searchUnderline: {\r\n        \"&::before\": {\r\n            borderBottom: \"none\",\r\n        },\r\n    },\r\n    tweetUserInfo: {\r\n        display: \"flex\",\r\n        marginBottom: \"25px\",\r\n        position: \"relative\",\r\n    },\r\n    tweetUserInfoAvatar: {\r\n        marginRight: \"25px\",\r\n    },\r\n    twittWrapper: {\r\n        borderRadius: \"0\",\r\n        borderLeft: \"none\",\r\n        borderRight: \"none\",\r\n        padding: \"15px\",\r\n        transition: \"all 0.3s\",\r\n        cursor: \"pointer\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"rgb(244, 248, 249)\",\r\n        },\r\n    },\r\n    twittAvatar: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n    },\r\n    twittInfo: {\r\n        position: \"relative\",\r\n        paddingRight: \"50px\",\r\n    },\r\n    userTwetInfo: {\r\n        position: \"relative\",\r\n    },\r\n    tweetUserName: {\r\n        color: \"grey\",\r\n    },\r\n    userTwittText: {\r\n        fontSize: 24,\r\n        lineHeight: 1.35,\r\n        color: \"#555\",\r\n        marginBottom: \"20px\",\r\n    },\r\n\r\n    twittTitleButton: {\r\n        padding: \"6px\",\r\n        position: \"absolute\",\r\n        top: \"2px\",\r\n        right: \"10px\",\r\n    },\r\n    iconBox: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        maxWidth: \"450px\",\r\n        position: \"relative\",\r\n        left: \"-15px\",\r\n    },\r\n    userIconBox: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        position: \"relative\",\r\n    },\r\n    iconBoxItem: {\r\n        \"& svg:hover\": {\r\n            color: \"#1da1f2\",\r\n        },\r\n        \"&:hover\": {\r\n            \"& span\": {\r\n                color: \"#1da1f2\",\r\n            },\r\n        },\r\n    },\r\n    tweetAvatar: {\r\n        width: \"65px\",\r\n        height: \"65px\",\r\n    },\r\n    navBarList: {\r\n        margin: 0,\r\n        padding: 0,\r\n        listStyle: \"none\",\r\n        position: \"sticky\",\r\n        top: 0,\r\n        li: {\r\n            textAlign: \"center\",\r\n            marginTop: 15,\r\n            display: \"flex\",\r\n            cursor: \"pointer\",\r\n            alignItems: \"center\",\r\n        },\r\n    },\r\n    navBarIcon: {\r\n        fontSize: 36,\r\n    },\r\n    navBarLabel: {\r\n        fontWeight: 700,\r\n        fontSize: 20,\r\n        paddingLeft: 25,\r\n    },\r\n    navBarIconButton: {\r\n        borderRadius: 35,\r\n        padding: \"10px 15px\",\r\n        transition: \"all 0.25s\",\r\n        \"&:hover\": {\r\n            \"& h6\": {\r\n                color: \"#1da1f2\",\r\n            },\r\n            \"& svg\": {\r\n                color: \"#1da1f2 !important\",\r\n            },\r\n        },\r\n    },\r\n    btnNavbar: {\r\n        marginTop: 30,\r\n        padding: \"25px\",\r\n    },\r\n    aside: {\r\n        position: \"sticky\",\r\n        top: 0,\r\n    },\r\n    thems: {\r\n        backgroundColor: \"rgb(240, 247, 248)\",\r\n        marginBottom: \"25px\",\r\n    },\r\n    themsTitle: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        padding: \"7px 15px\",\r\n        alignItems: \"center\",\r\n        \"& h6\": {\r\n            fontWeight: \"700\",\r\n        },\r\n    },\r\n    themsTweet: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        padding: \"7px 15px\",\r\n        alignItems: \"center\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"rgb(235, 245, 246)\",\r\n        },\r\n    },\r\n    themsTweetTitle: {\r\n        fontWeight: 700,\r\n    },\r\n    themsTweetSubTitle: {\r\n        fontSize: \"14px\",\r\n        color: \"#aaa\",\r\n    },\r\n    recomendBlock: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n    recomendBlockInfo: {\r\n        marginLeft: \"8px\",\r\n    },\r\n    addWrapper: {\r\n        padding: \"7px 25px\",\r\n    },\r\n    addHeader: {\r\n        display: \"flex\",\r\n    },\r\n    addHeaderAvatar: {\r\n        width: \"70px\",\r\n        height: \"70px\",\r\n        marginRight: \"20px\",\r\n    },\r\n    addHeaderInput: {\r\n        width: \"100%\",\r\n        flexGrow: 1,\r\n        outline: \"none\",\r\n        resize: \"none\",\r\n        padding: \"10px\",\r\n        border: \"none\",\r\n    },\r\n    addFooter: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        maxWidth: \"470px\",\r\n        marginLeft: \"auto\",\r\n    },\r\n    addProgress: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n    addProgressBlockWrapper: {\r\n        position: \"relative\",\r\n    },\r\n    addProgressBlock: {\r\n        width: \"25px !important\",\r\n        height: \"25px !important\",\r\n\r\n        marginRight: \"10px\",\r\n        marginLeft: \"10px\",\r\n        zIndex: 1,\r\n    },\r\n    addProgressBlockAbs: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: \"10px\",\r\n        width: \"25px !important\",\r\n        height: \"25px !important\",\r\n        color: \"rgba(0,0,0, 0.2)\",\r\n        zIndex: 0,\r\n    },\r\n    modalWrapper: {\r\n        maxWidth: \"600px\",\r\n        width: \"100%\",\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        backgroundColor: \"#fff\",\r\n        padding: \"25px\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        borderRadius: \"15px\",\r\n        boxShadow: \"0 0 5px #ddd\",\r\n    },\r\n    tagsWraperLink: {\r\n        textDecoration: \"none\",\r\n        color: \"inherit\",\r\n        cursor: \"pointer\",\r\n    },\r\n    tweetTitle: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        \"& a\": {\r\n            paddingRight: \"20px\",\r\n            paddingTop: \"7px\",\r\n            textDecoration: \"none\",\r\n            color: \"inherit\",\r\n        },\r\n    },\r\n}));\r\n","export enum LoadingState {\r\n    LOADED = \"LOADED\",\r\n    LOADING = \"LOADING\",\r\n    ERROR = \"ERROR\",\r\n    NEVER = \"NEVER\",\r\n}\r\n\r\nexport interface Tags {\r\n    _id: string;\r\n    tags: string;\r\n    count: number;\r\n    tag: string;\r\n}\r\n\r\nexport interface TagsType {\r\n    item: Tags[];\r\n    loadingState: LoadingState;\r\n}\r\n","import { RootState } from \"../../store\";\r\nimport { LoadingState } from \"./contracts/types\";\r\n\r\nconst selectTags = (state: RootState) => state.tags;\r\n\r\nexport const selectTagsItem = (state: RootState) => selectTags(state).item;\r\n\r\nexport const selectLoadingState = (state: RootState) =>\r\n    selectTags(state).loadingState;\r\n\r\nexport const selectIsLoadingTags = (state: RootState): boolean =>\r\n    selectLoadingState(state) === LoadingState.LOADING;\r\n\r\nexport const selectIsLoadedTags = (state: RootState): boolean =>\r\n    selectLoadingState(state) === LoadingState.LOADED;\r\n\r\nexport const selectIsErrorTags = (state: RootState): boolean =>\r\n    selectLoadingState(state) === LoadingState.ERROR;\r\n","export enum LoadingState {\r\n    LOADED = \"LOADED\",\r\n    LOADING = \"LOADING\",\r\n    ERROR = \"ERROR\",\r\n    NEVER = \"NEVER\",\r\n}\r\n\r\nexport interface RecommendUser {\r\n    _id: string;\r\n    fullname: string;\r\n    username: string;\r\n    avatar: string;\r\n}\r\n\r\nexport interface RecomendUserType {\r\n    item: RecommendUser[];\r\n    loadingState: LoadingState;\r\n}\r\n","import { RootState } from \"../../store\";\r\nimport { LoadingState } from \"./contracts/types\";\r\n\r\nconst selectRecomendUsers = (state: RootState) => state.recommendUsers;\r\n\r\nexport const selectRecomendUsersItem = (state: RootState) =>\r\n    selectRecomendUsers(state).item;\r\n\r\nexport const selectLoadingState = (state: RootState) =>\r\n    selectRecomendUsers(state).loadingState;\r\n\r\nexport const selectIsLoadingRecomend = (state: RootState): boolean =>\r\n    selectLoadingState(state) === LoadingState.LOADING;\r\n\r\nexport const selectIsLoadedRecomend = (state: RootState): boolean =>\r\n    selectLoadingState(state) === LoadingState.LOADED;\r\n\r\nexport const selectIsErrorRecomend = (state: RootState): boolean =>\r\n    selectLoadingState(state) === LoadingState.ERROR;\r\n","import { Action } from \"redux\";\r\nimport { LoadingState, RecommendUser } from \"../contracts/types\";\r\n\r\nexport enum RecomendUserActionsType {\r\n    SET_RECOMEND_USER = \"recomendUser/SET_RECOMEND_USER\",\r\n    FETCH_RECOMEND_USER = \"recomendUser/FETCH_RECOMEND_USER\",\r\n    SET_STATUS = \"recomendUser/SET_STATUS\",\r\n}\r\n\r\nexport interface SetRecomendUserActionInterface\r\n    extends Action<RecomendUserActionsType> {\r\n    type: RecomendUserActionsType.SET_RECOMEND_USER;\r\n    payload: RecommendUser[];\r\n}\r\n\r\nexport interface FetchRecomendUserActionInterface\r\n    extends Action<RecomendUserActionsType> {\r\n    type: RecomendUserActionsType.FETCH_RECOMEND_USER;\r\n}\r\nexport interface SetStatusActionInterface\r\n    extends Action<RecomendUserActionsType> {\r\n    type: RecomendUserActionsType.SET_STATUS;\r\n    payload: LoadingState;\r\n}\r\n\r\nexport const setRecomendUsers = (\r\n    payload: RecommendUser[]\r\n): SetRecomendUserActionInterface => ({\r\n    type: RecomendUserActionsType.SET_RECOMEND_USER,\r\n    payload,\r\n});\r\n\r\nexport const setStatusRecomendUser = (\r\n    payload: LoadingState\r\n): SetStatusActionInterface => ({\r\n    type: RecomendUserActionsType.SET_STATUS,\r\n    payload,\r\n});\r\nexport const fetchRecomendUsers = (): FetchRecomendUserActionInterface => ({\r\n    type: RecomendUserActionsType.FETCH_RECOMEND_USER,\r\n});\r\n\r\nexport type RecomendAction =\r\n    | SetRecomendUserActionInterface\r\n    | FetchRecomendUserActionInterface\r\n    | SetStatusActionInterface;\r\n","import { Action } from \"redux\";\r\nimport { LoadingState, SelectTweetType } from \"../contracts/types\";\r\n\r\nexport enum SelectTweetActionsType {\r\n    SET_SELECT_TWEET = \"tweet/SET_SELECT_TWEET\",\r\n    FETCH_SELECT_TWEET = \"tweet/FETCH_SELECT_TWEET\",\r\n    SET_STATUS = \"tweet/SET_STATUS\",\r\n}\r\n\r\nexport interface SetSelectTweetActionInterface\r\n    extends Action<SelectTweetActionsType> {\r\n    type: SelectTweetActionsType.SET_SELECT_TWEET;\r\n    payload: SelectTweetType[\"item\"];\r\n}\r\n\r\nexport interface FetchSelectTweetActionInterface\r\n    extends Action<SelectTweetActionsType> {\r\n    type: SelectTweetActionsType.FETCH_SELECT_TWEET;\r\n    payload: string;\r\n}\r\nexport interface SetStatusActionInterface\r\n    extends Action<SelectTweetActionsType> {\r\n    type: SelectTweetActionsType.SET_STATUS;\r\n    payload: LoadingState;\r\n}\r\n\r\nexport const setSelectTweet = (\r\n    payload: SelectTweetType[\"item\"]\r\n): SetSelectTweetActionInterface => ({\r\n    type: SelectTweetActionsType.SET_SELECT_TWEET,\r\n    payload,\r\n});\r\n\r\nexport const setStatusSelecteTweet = (\r\n    payload: LoadingState\r\n): SetStatusActionInterface => ({\r\n    type: SelectTweetActionsType.SET_STATUS,\r\n    payload,\r\n});\r\nexport const fetchSelectTweetAction = (\r\n    payload: string\r\n): FetchSelectTweetActionInterface => ({\r\n    type: SelectTweetActionsType.FETCH_SELECT_TWEET,\r\n    payload,\r\n});\r\n\r\nexport type SelectTweetAction =\r\n    | SetSelectTweetActionInterface\r\n    | FetchSelectTweetActionInterface\r\n    | SetStatusActionInterface;\r\n","export enum LoadingState {\r\n    LOADED = \"LOADED\",\r\n    LOADING = \"LOADING\",\r\n    ERROR = \"ERROR\",\r\n    NEVER = \"NEVER\",\r\n}\r\n\r\nexport interface Tweet {\r\n    _id: string;\r\n    text: string;\r\n    user: {\r\n        fullname: string;\r\n        username: string;\r\n        avatar: string;\r\n    };\r\n}\r\n\r\nexport interface SelectTweetType {\r\n    item?: Tweet;\r\n    loadingState: LoadingState;\r\n}\r\n","import { RootState } from \"../../store\";\r\nimport { LoadingState } from \"./contracts/types\";\r\n\r\nconst selectTwet = (state: RootState) => state.selectTweet;\r\n\r\nexport const selectTweetItem = (state: RootState) => selectTwet(state).item;\r\n\r\nexport const selectLoadingState = (state: RootState) =>\r\n    selectTwet(state).loadingState;\r\n\r\nexport const selectIsLoadingSelectTweet = (state: RootState): boolean =>\r\n    selectLoadingState(state) === LoadingState.LOADING;\r\n\r\nexport const selectIsLoadedSelectTweet = (state: RootState): boolean =>\r\n    selectLoadingState(state) === LoadingState.LOADED;\r\n\r\nexport const selectIsErrorSelectTweet = (state: RootState): boolean =>\r\n    selectLoadingState(state) === LoadingState.ERROR;\r\n","import {\r\n    Avatar,\r\n    Box,\r\n    CircularProgress,\r\n    IconButton,\r\n    Paper,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport DotsIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport CommentIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport RetwittIcon from \"@material-ui/icons/Repeat\";\r\nimport LikeIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport {\r\n    fetchSelectTweetAction,\r\n    setSelectTweet,\r\n} from \"../../../store/ducks/tweetSelect/actionsCreators/actionCreators\";\r\nimport {\r\n    selectIsLoadingSelectTweet,\r\n    selectTweetItem,\r\n} from \"../../../store/ducks/tweetSelect/selectors\";\r\nimport { useHomeStyle } from \"../theme\";\r\n\r\nconst FullTweet: React.FC = (): React.ReactElement | null => {\r\n    const classes = useHomeStyle();\r\n    const params: { id?: string } = useParams();\r\n\r\n    const id = params.id;\r\n    console.log(useParams());\r\n    const dispatch = useDispatch();\r\n\r\n    const selectTweet = useSelector(selectTweetItem);\r\n    const isLoadingSelectTweet = useSelector(selectIsLoadingSelectTweet);\r\n    React.useEffect(() => {\r\n        if (id) {\r\n            dispatch(fetchSelectTweetAction(id));\r\n        }\r\n\r\n        return () => {\r\n            dispatch(setSelectTweet(undefined));\r\n        };\r\n    }, [dispatch, id]);\r\n\r\n    return (\r\n        <div>\r\n            {isLoadingSelectTweet ? (\r\n                <div\r\n                    style={{\r\n                        textAlign: \"center\",\r\n                        paddingTop: \"25px\",\r\n                        paddingBottom: \"25px\",\r\n                    }}\r\n                >\r\n                    <CircularProgress />\r\n                </div>\r\n            ) : selectTweet ? (\r\n                <Paper variant=\"outlined\" className={classes.twittWrapper}>\r\n                    <Box className={classes.tweetUserInfo}>\r\n                        <Box className={classes.tweetUserInfoAvatar}>\r\n                            <Avatar\r\n                                alt={`user avatar ${selectTweet.user.username}`}\r\n                                src={selectTweet.user.avatar}\r\n                                className={classes.tweetAvatar}\r\n                            >\r\n                                A\r\n                            </Avatar>\r\n                        </Box>\r\n                        <Box>\r\n                            <Typography>\r\n                                <b>{selectTweet.user.fullname} </b>\r\n                                <span>-</span>\r\n                                <span>1 ч</span>\r\n                                <div className={classes.tweetUserName}>\r\n                                    {selectTweet.user.username}\r\n                                </div>\r\n                            </Typography>\r\n\r\n                            <IconButton className={classes.twittTitleButton}>\r\n                                <DotsIcon />\r\n                            </IconButton>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box>\r\n                        <Typography className={classes.userTwittText}>\r\n                            {selectTweet.text}\r\n                        </Typography>\r\n\r\n                        <Box className={classes.userIconBox}>\r\n                            <div className={classes.iconBoxItem}>\r\n                                <IconButton>\r\n                                    <CommentIcon />\r\n                                </IconButton>\r\n                                <span>1</span>\r\n                            </div>\r\n                            <div className={classes.iconBoxItem}>\r\n                                <IconButton>\r\n                                    <RetwittIcon />\r\n                                </IconButton>\r\n                                <span>116</span>\r\n                            </div>\r\n                            <div className={classes.iconBoxItem}>\r\n                                <IconButton>\r\n                                    <LikeIcon />\r\n                                </IconButton>\r\n                                <span>100</span>\r\n                            </div>\r\n                            <div className={classes.iconBoxItem}>\r\n                                <IconButton>\r\n                                    <ShareIcon />\r\n                                </IconButton>\r\n                                <span>15</span>\r\n                            </div>\r\n                        </Box>\r\n                    </Box>\r\n                </Paper>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FullTweet;\r\n","import React from \"react\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n\r\nimport FlareIcon from \"@material-ui/icons/Flare\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\n\r\nimport { Typography, Paper, Box, CircularProgress } from \"@material-ui/core\";\r\n\r\nimport {\r\n    Tweet,\r\n    Navbar,\r\n    SerachFormInput,\r\n    Thems,\r\n    RecomendFollow,\r\n    AddedTweet,\r\n} from \"../../components\";\r\n\r\nimport { useHomeStyle } from \"./theme\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n    selectIsErrorTweets,\r\n    selectIsLoadingTweets,\r\n    selectTweetsItem,\r\n} from \"../../store/ducks/tweets/selectors\";\r\nimport { fetchTags } from \"../../store/ducks/tags/actionsCreators/actionCreators\";\r\nimport { fetchTweets } from \"../../store/ducks/tweets/actionsCreators/actionCreators\";\r\nimport {\r\n    selectIsErrorTags,\r\n    selectIsLoadingTags,\r\n    selectTagsItem,\r\n} from \"../../store/ducks/tags/selectors\";\r\nimport {\r\n    selectIsErrorRecomend,\r\n    selectIsLoadingRecomend,\r\n    selectRecomendUsersItem,\r\n} from \"../../store/ducks/recomendUsers/selectors\";\r\nimport { fetchRecomendUsers } from \"../../store/ducks/recomendUsers/actionsCreators/actionCreators\";\r\n\r\nimport FullTweet from \"./components/FullTweet\";\r\n\r\nconst Home: React.FC = (): React.ReactElement => {\r\n    const classes = useHomeStyle();\r\n    const dispatch = useDispatch();\r\n\r\n    const tweets = useSelector(selectTweetsItem);\r\n    const tags = useSelector(selectTagsItem);\r\n    const recommendUsers = useSelector(selectRecomendUsersItem);\r\n\r\n    const isLoading = useSelector(selectIsLoadingTweets);\r\n    const isLoadingTag = useSelector(selectIsLoadingTags);\r\n    const isLoadingRecommendUser = useSelector(selectIsLoadingRecomend);\r\n\r\n    const isErrorTweets = useSelector(selectIsErrorTweets);\r\n    const isErrorTags = useSelector(selectIsErrorTags);\r\n    const isErrorRecommendUsers = useSelector(selectIsErrorRecomend);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(fetchTweets());\r\n        dispatch(fetchTags());\r\n        dispatch(fetchRecomendUsers());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <section className={classes.home}>\r\n            <Grid container spacing={2} className={classes.gridContainer}>\r\n                <Grid item xs={2} sm={3}>\r\n                    <Navbar classes={classes} />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Paper variant=\"outlined\" className={classes.twitterPaper}>\r\n                        <Route path={[\"/home\"]} exact>\r\n                            <Paper\r\n                                variant=\"outlined\"\r\n                                className={classes.homeTitleWrapper}\r\n                            >\r\n                                <Box className={classes.homeTitle}>\r\n                                    <Typography variant=\"h6\">Твиты</Typography>\r\n                                    <IconButton>\r\n                                        <FlareIcon\r\n                                            className={classes.homeTitleIcon}\r\n                                        />\r\n                                    </IconButton>\r\n                                </Box>\r\n                            </Paper>\r\n                        </Route>\r\n                        <Route path={[\"/home/tweet\", \"/home/search\"]}>\r\n                            <Paper\r\n                                variant=\"outlined\"\r\n                                className={classes.homeTitleWrapper}\r\n                            >\r\n                                <Box className={classes.homeTitle}>\r\n                                    <div className={classes.tweetTitle}>\r\n                                        <Link to=\"/home\">\r\n                                            <IconButton color=\"primary\">\r\n                                                <ArrowBackIcon />\r\n                                            </IconButton>\r\n                                        </Link>\r\n\r\n                                        <Typography variant=\"h6\">\r\n                                            Твитнуть\r\n                                        </Typography>\r\n                                    </div>\r\n\r\n                                    <IconButton>\r\n                                        <FlareIcon\r\n                                            className={classes.homeTitleIcon}\r\n                                        />\r\n                                    </IconButton>\r\n                                </Box>\r\n                            </Paper>\r\n                        </Route>\r\n\r\n                        <Route path=\"/home\" exact>\r\n                            <AddedTweet classes={classes} rowsMin={5} />\r\n                        </Route>\r\n                        <Route path={[\"/home\"]} exact>\r\n                            {isErrorTweets ? (\r\n                                <h1 style={{ textAlign: \"center\" }}>\r\n                                    Ничего не найдено проверьте соединение с\r\n                                    интернетом\r\n                                </h1>\r\n                            ) : isLoading ? (\r\n                                <div\r\n                                    style={{\r\n                                        textAlign: \"center\",\r\n                                        marginTop: \"25px\",\r\n                                    }}\r\n                                >\r\n                                    <CircularProgress />\r\n                                </div>\r\n                            ) : tweets ? (\r\n                                tweets\r\n                                    .map((item) => (\r\n                                        <Tweet\r\n                                            key={item._id}\r\n                                            id={item._id}\r\n                                            classes={classes}\r\n                                            text={item.text}\r\n                                            user={{\r\n                                                avatar: item.user.avatar,\r\n                                                fullname: item.user.fullname,\r\n                                                username: item.user.username,\r\n                                            }}\r\n                                        />\r\n                                    ))\r\n                                    .reverse()\r\n                            ) : (\r\n                                <h6>Не удалось получитть данные от сервера</h6>\r\n                            )}\r\n                        </Route>\r\n                        <Route path=\"/home/tweet/:id\">\r\n                            <FullTweet />\r\n                        </Route>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <div className={classes.aside}>\r\n                        <SerachFormInput />\r\n                        <Paper className={classes.thems}>\r\n                            <div className={classes.themsTitle}>\r\n                                <Typography variant=\"h6\">\r\n                                    Актуальные темы\r\n                                </Typography>\r\n                                <IconButton color=\"primary\">\r\n                                    <SettingsIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                            {isErrorTags ? (\r\n                                <h6\r\n                                    style={{\r\n                                        textAlign: \"center\",\r\n                                        paddingBottom: \"25px\",\r\n                                    }}\r\n                                >\r\n                                    Ничего не найдено\r\n                                </h6>\r\n                            ) : isLoadingTag ? (\r\n                                <div\r\n                                    style={{\r\n                                        textAlign: \"center\",\r\n                                        paddingTop: \"25px\",\r\n                                        paddingBottom: \"25px\",\r\n                                    }}\r\n                                >\r\n                                    <CircularProgress />\r\n                                </div>\r\n                            ) : (\r\n                                tags.map((item) => (\r\n                                    <Thems\r\n                                        key={item._id}\r\n                                        classes={classes}\r\n                                        title={item.tags}\r\n                                        tweets={item.count}\r\n                                        tag={item.tag}\r\n                                    />\r\n                                ))\r\n                            )}\r\n                        </Paper>\r\n                        <Paper className={classes.thems}>\r\n                            <div className={classes.themsTitle}>\r\n                                <Typography variant=\"h6\">\r\n                                    Кого читать\r\n                                </Typography>\r\n                            </div>\r\n                            {isErrorRecommendUsers ? (\r\n                                <h6\r\n                                    style={{\r\n                                        textAlign: \"center\",\r\n                                        paddingBottom: \"25px\",\r\n                                    }}\r\n                                >\r\n                                    Нет рекомендаций\r\n                                </h6>\r\n                            ) : isLoadingRecommendUser ? (\r\n                                <div\r\n                                    style={{\r\n                                        textAlign: \"center\",\r\n                                        paddingTop: \"25px\",\r\n                                        paddingBottom: \"25px\",\r\n                                    }}\r\n                                >\r\n                                    <CircularProgress />\r\n                                </div>\r\n                            ) : (\r\n                                recommendUsers.map((item) => (\r\n                                    <RecomendFollow\r\n                                        key={item._id}\r\n                                        classes={classes}\r\n                                        avatar={item.avatar}\r\n                                        user={{\r\n                                            fullname: item.fullname,\r\n                                            username: item.username,\r\n                                        }}\r\n                                    />\r\n                                ))\r\n                            )}\r\n                        </Paper>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport \"./enterStyle.scss\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nfunction PageEnter() {\r\n    const handleSubmit = (e: any) => {\r\n        e.preventDefault();\r\n    };\r\n    return (\r\n        <div className=\"wrapper-enter\">\r\n            <div className=\"enter\">\r\n                <div className=\"enter-icon\">\r\n                    <TwitterIcon className=\"enter-icon-twitter\" />\r\n                </div>\r\n                <div className=\"enter-title\">Войти в Твиттер</div>\r\n                <div className=\"enter-form\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"enter-form-inputBlock\">\r\n                            <TextField\r\n                                id=\"outlined-basic\"\r\n                                label=\"Телефон или email\"\r\n                                variant=\"outlined\"\r\n                                className=\"enter-form-input\"\r\n                            />\r\n                            <TextField\r\n                                id=\"outlined-basic\"\r\n                                label=\"Пароль\"\r\n                                variant=\"outlined\"\r\n                                className=\"enter-form-input\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"enter-btn\">\r\n                            <Link to=\"/home\">\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    fullWidth\r\n                                >\r\n                                    Войти\r\n                                </Button>\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"enter-fotter\">\r\n                    <Link to=\"/login\" className=\"enter-fotter-link\">\r\n                        Забыли пароль\r\n                    </Link>\r\n                    <Link to=\"/login\" className=\"enter-fotter-link\">\r\n                        Зарегистрироваться в Твиттере\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageEnter;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport PeopleOutlineIcon from \"@material-ui/icons/PeopleOutline\";\r\nimport ModeCommentOutlinedIcon from \"@material-ui/icons/ModeCommentOutlined\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { ModalLogin } from \"../../components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n    wrapper: {\r\n        display: \"flex\",\r\n        height: \"100vh\",\r\n    },\r\n    blueSide: {\r\n        backgroundColor: \"#aedef9\",\r\n        width: \"50%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        overflow: \"hidden\",\r\n        position: \"relative\",\r\n    },\r\n    blueSideWrapper: {\r\n        position: \"relative\",\r\n        maxWidth: 380,\r\n    },\r\n    blueSideTwitterBG: {\r\n        position: \"absolute\",\r\n        fontSize: 1200,\r\n        top: \"-40%\",\r\n    },\r\n    blueSideList: {\r\n        listStyle: \"none\",\r\n        margin: 0,\r\n        padding: 0,\r\n        color: \"#fff\",\r\n        \"& h6\": {\r\n            fontWeight: 700,\r\n        },\r\n        \"& li\": {\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            marginBottom: 15,\r\n            fontSize: 20,\r\n        },\r\n    },\r\n    blueSideListIcon: {\r\n        paddingRight: 10,\r\n        fontSize: 28,\r\n    },\r\n\r\n    loginSide: {\r\n        width: \"50%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        overflow: \"hiden\",\r\n        position: \"relative\",\r\n    },\r\n    twitterIcon: {\r\n        fontSize: 50,\r\n    },\r\n    loginSideWrapper: {\r\n        maxWidth: 380,\r\n        padding: \"0 10px\",\r\n    },\r\n    loginSideTitle: {\r\n        fontWeight: 700,\r\n        fontSize: 32,\r\n        marginBottom: 40,\r\n        marginTop: 15,\r\n    },\r\n    loginSideBtn: {\r\n        margin: \"10px 0\",\r\n    },\r\n    loginSideSubtitle: {\r\n        marginBottom: 10,\r\n    },\r\n    linkBtn: {\r\n        textDecoration: \"none\",\r\n    },\r\n}));\r\n\r\nconst Signin: React.FC = (): React.ReactElement => {\r\n    const classes = useStyle();\r\n\r\n    const [openLogin, setOpenLogin] = useState(false);\r\n\r\n    const openModalLogin: () => void = () => {\r\n        setOpenLogin(true);\r\n    };\r\n    const closeModalLogin: () => void = () => {\r\n        setOpenLogin(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {openLogin && <ModalLogin closeModalLogin={closeModalLogin} />}\r\n            <div className={classes.wrapper}>\r\n                <div className={classes.blueSide}>\r\n                    <TwitterIcon\r\n                        className={classes.blueSideTwitterBG}\r\n                        color=\"primary\"\r\n                    />\r\n                    <div className={classes.blueSideWrapper}>\r\n                        <ul className={classes.blueSideList}>\r\n                            <li>\r\n                                <SearchIcon\r\n                                    className={classes.blueSideListIcon}\r\n                                />\r\n                                <Typography variant=\"h6\">\r\n                                    Читай о том, что тебе нитересно\r\n                                </Typography>\r\n                            </li>\r\n                            <li>\r\n                                <PeopleOutlineIcon\r\n                                    className={classes.blueSideListIcon}\r\n                                />\r\n                                <Typography variant=\"h6\">\r\n                                    Узнайте, о чем говорят в мире\r\n                                </Typography>\r\n                            </li>\r\n                            <li>\r\n                                <ModeCommentOutlinedIcon\r\n                                    className={classes.blueSideListIcon}\r\n                                />\r\n                                <Typography variant=\"h6\">\r\n                                    Присоединяйтесь к сообществу\r\n                                </Typography>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.loginSide}>\r\n                    <div className={classes.loginSideWrapper}>\r\n                        <div>\r\n                            <TwitterIcon\r\n                                className={classes.twitterIcon}\r\n                                color=\"primary\"\r\n                            />\r\n                        </div>\r\n                        <Typography\r\n                            variant=\"h2\"\r\n                            className={classes.loginSideTitle}\r\n                        >\r\n                            В курсе происходящего\r\n                        </Typography>\r\n                        <Typography>\r\n                            <b>Присоединяйтесь к Твиттеру прямо сейчас!</b>\r\n                        </Typography>\r\n\r\n                        <div className=\"btn-wrapper\">\r\n                            <Button\r\n                                className={classes.loginSideBtn}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                fullWidth\r\n                                onClick={openModalLogin}\r\n                            >\r\n                                Зарегестрироваться\r\n                            </Button>\r\n                            <Link to=\"/enter\" className={classes.linkBtn}>\r\n                                <Button\r\n                                    className={classes.loginSideBtn}\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    fullWidth\r\n                                >\r\n                                    Войти\r\n                                </Button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Signin;\r\n","import React from \"react\";\r\n\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport { Home, PageEnter, Signin } from \"./pages\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Switch>\r\n                <Route path=\"/home\" component={Home} />\r\n                <Route path=\"/\" component={Signin} exact />\r\n                <Route path=\"/enter\" component={PageEnter} />\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// @ts-nocheck\r\n\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme({\r\n    typography: {\r\n        fontFamily: [\r\n            \"-apple-system\",\r\n            \"BlinkMacSystemFont\",\r\n            '\"Segoe UI\"',\r\n            \"Roboto\",\r\n            '\"Helvetica Neue\"',\r\n            \"Arial\",\r\n            \"sans-serif\",\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(\",\"),\r\n    },\r\n    palette: {\r\n        primary: {\r\n            main: \"rgba(29,161,242)\",\r\n            dark: \"rgba(26, 145, 218)\",\r\n            contrastText: \"#fff\",\r\n        },\r\n        secondary: {\r\n            main: \"rgba(26,145,218)\",\r\n        },\r\n        error: {\r\n            main: red.A400,\r\n        },\r\n        background: {\r\n            default: \"#fff\",\r\n        },\r\n    },\r\n    shadows: [],\r\n    overrides: {\r\n        MuiButton: {\r\n            root: {\r\n                borderRadius: 30,\r\n                textTransform: \"none\",\r\n                fontSize: 16,\r\n                height: 40,\r\n                fontWeight: 700,\r\n            },\r\n            textPrimary: {\r\n                paddingLeft: 20,\r\n                paddingRight: 20,\r\n            },\r\n            outlinedPrimary: {\r\n                borderColor: \"rgb(29,161,243)\",\r\n            },\r\n        },\r\n        MuiFilledInput: {\r\n            underline: {\r\n                \"&:after\": {\r\n                    borderBottomWidth: \"2px\",\r\n                },\r\n                \"&:before\": {\r\n                    borderColor: \"#000\",\r\n                    borderBottomWidth: \"2px\",\r\n                },\r\n            },\r\n            input: {\r\n                backgroundColor: \"rgba(245, 248, 250)\",\r\n            },\r\n        },\r\n        MuiDialog: {\r\n            paper: {\r\n                borderRadius: 15,\r\n            },\r\n        },\r\n        MuiDialogActions: {\r\n            root: {\r\n                marginBottom: 8,\r\n            },\r\n        },\r\n        MuiDialogTitle: {\r\n            root: {\r\n                borderBottom: \"1px solid rgb(204, 214, 221)\",\r\n                marginBottom: 10,\r\n                padding: \"10px 15px\",\r\n                \"& h2\": {\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    fontWeight: 800,\r\n                },\r\n                \"& button\": {\r\n                    padding: 8,\r\n                    marginRight: 20,\r\n                },\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\nexport default theme;\r\n","import produce, { Draft } from \"immer\";\r\nimport {\r\n    RecomendAction,\r\n    RecomendUserActionsType,\r\n} from \"./actionsCreators/actionCreators\";\r\nimport { LoadingState, RecomendUserType } from \"./contracts/types\";\r\n\r\nconst initialTweetsState: RecomendUserType = {\r\n    item: [],\r\n    loadingState: LoadingState.NEVER,\r\n};\r\n\r\nexport const recomendUserReduser = produce(\r\n    (draft: Draft<RecomendUserType>, action: RecomendAction) => {\r\n        if (action.type === RecomendUserActionsType.SET_RECOMEND_USER) {\r\n            draft.item = action.payload;\r\n            draft.loadingState = LoadingState.LOADED;\r\n        }\r\n        if (action.type === RecomendUserActionsType.SET_STATUS) {\r\n            draft.loadingState = action.payload;\r\n        }\r\n        if (action.type === RecomendUserActionsType.FETCH_RECOMEND_USER) {\r\n            draft.item = [];\r\n            draft.loadingState = LoadingState.LOADING;\r\n        }\r\n    },\r\n    initialTweetsState\r\n);\r\n","import produce, { Draft } from \"immer\";\r\nimport { TagsAction, TagsActionsType } from \"./actionsCreators/actionCreators\";\r\nimport { LoadingState, TagsType } from \"./contracts/types\";\r\n\r\nconst initialTweetsState: TagsType = {\r\n    item: [],\r\n    loadingState: LoadingState.NEVER,\r\n};\r\n\r\nexport const tagsReduser = produce(\r\n    (draft: Draft<TagsType>, action: TagsAction) => {\r\n        if (action.type === TagsActionsType.SET_TAGS) {\r\n            draft.item = action.payload;\r\n            draft.loadingState = LoadingState.LOADED;\r\n        }\r\n        if (action.type === TagsActionsType.SET_STATUS) {\r\n            draft.loadingState = action.payload;\r\n        }\r\n        if (action.type === TagsActionsType.FETCH_TAGS) {\r\n            draft.item = [];\r\n            draft.loadingState = LoadingState.LOADING;\r\n        }\r\n    },\r\n    initialTweetsState\r\n);\r\n","import produce, { Draft } from \"immer\";\r\nimport {\r\n    TweetsAction,\r\n    TweetsActionsType,\r\n} from \"./actionsCreators/actionCreators\";\r\nimport { AddLoadingState, LoadingState, TweetsType } from \"./contracts/types\";\r\n\r\nconst initialTweetsState: TweetsType = {\r\n    item: [],\r\n    loadingState: LoadingState.NEVER,\r\n    addTweetState: AddLoadingState.NEVER,\r\n};\r\n\r\nexport const tweetsReduser = produce(\r\n    (draft: Draft<TweetsType>, action: TweetsAction) => {\r\n        if (action.type === TweetsActionsType.SET_TWEETS) {\r\n            draft.item = action.payload;\r\n            draft.loadingState = LoadingState.LOADED;\r\n        }\r\n\r\n        if (action.type === TweetsActionsType.SET_STATUS) {\r\n            draft.loadingState = action.payload;\r\n        }\r\n        if (action.type === TweetsActionsType.FETCH_TWEETS) {\r\n            draft.item = [];\r\n            draft.loadingState = LoadingState.LOADING;\r\n        }\r\n        if (action.type === TweetsActionsType.FETCH_FILTER_TWETS) {\r\n            draft.item = [];\r\n            draft.loadingState = LoadingState.LOADING;\r\n        }\r\n        if (action.type === TweetsActionsType.FETCH_ADD_TWEETS) {\r\n            draft.addTweetState = AddLoadingState.LOADING;\r\n        }\r\n        if (action.type === TweetsActionsType.ADD_TWEETS) {\r\n            draft.item.push(action.payload);\r\n            draft.addTweetState = AddLoadingState.NEVER;\r\n        }\r\n        if (action.type === TweetsActionsType.SET_STATUS_ADD) {\r\n            draft.addTweetState = AddLoadingState.ERROR;\r\n        }\r\n    },\r\n    initialTweetsState\r\n);\r\n","import produce, { Draft } from \"immer\";\r\nimport {\r\n    SelectTweetAction,\r\n    SelectTweetActionsType,\r\n} from \"./actionsCreators/actionCreators\";\r\nimport { LoadingState, SelectTweetType } from \"./contracts/types\";\r\n\r\nconst initialTweetState: SelectTweetType | null = {\r\n    item: undefined,\r\n    loadingState: LoadingState.NEVER,\r\n};\r\n\r\nexport const selectTweetReduser = produce(\r\n    (draft: Draft<SelectTweetType>, action: SelectTweetAction) => {\r\n        if (action.type === SelectTweetActionsType.SET_SELECT_TWEET) {\r\n            draft.item = action.payload;\r\n            draft.loadingState = LoadingState.LOADED;\r\n        }\r\n        if (action.type === SelectTweetActionsType.SET_STATUS) {\r\n            draft.loadingState = action.payload;\r\n        }\r\n        if (action.type === SelectTweetActionsType.FETCH_SELECT_TWEET) {\r\n            draft.item = undefined;\r\n            draft.loadingState = LoadingState.LOADING;\r\n        }\r\n    },\r\n    initialTweetState\r\n);\r\n","import { combineReducers } from \"redux\";\r\nimport { recomendUserReduser } from \"./ducks/recomendUsers/reduser\";\r\nimport { tagsReduser } from \"./ducks/tags/reduser\";\r\nimport { tweetsReduser } from \"./ducks/tweets/reduser\";\r\nimport { selectTweetReduser } from \"./ducks/tweetSelect/reduser\";\r\n\r\nexport const rootReduser = combineReducers({\r\n    tweets: tweetsReduser,\r\n    tags: tagsReduser,\r\n    recommendUsers: recomendUserReduser,\r\n    selectTweet: selectTweetReduser,\r\n});\r\n","import axios from \"axios\";\r\nimport { Tags } from \"../../store/ducks/tags/contracts/types\";\r\nimport { Tweets } from \"../../store/ducks/tweets/contracts/types\";\r\nimport { Tweet } from \"../../store/ducks/tweetSelect/contracts/types\";\r\n\r\nexport const fetchApi = {\r\n    fetchTweet(): Promise<Tweets[]> {\r\n        return axios\r\n            .get(\r\n                \"https://my-json-server.typicode.com/EvgeniiLapotko/react-twitter/tweets\"\r\n            )\r\n            .then(({ data }) => data);\r\n    },\r\n    fetchTags(): Promise<Tags[]> {\r\n        return axios\r\n            .get(\r\n                \"https://my-json-server.typicode.com/EvgeniiLapotko/react-twitter/tags\"\r\n            )\r\n            .then(({ data }) => data);\r\n    },\r\n    fetchRecommendUsers(): Promise<Tags[]> {\r\n        return axios\r\n            .get(\r\n                \"https://my-json-server.typicode.com/EvgeniiLapotko/react-twitter/recommendUsers\"\r\n            )\r\n            .then(({ data }) => data);\r\n    },\r\n    fetchSelectTweet(id: string): Promise<Tweet[]> {\r\n        return axios\r\n            .get(\r\n                `https://my-json-server.typicode.com/EvgeniiLapotko/react-twitter/tweets?_id=${id}`\r\n            )\r\n            .then(({ data }) => data);\r\n    },\r\n    filterTweets(tag: string): Promise<Tweet[]> {\r\n        return axios\r\n            .get(\r\n                `https://my-json-server.typicode.com/EvgeniiLapotko/react-twitter/tweets?tag=${tag}`\r\n            )\r\n            .then(({ data }) => data);\r\n    },\r\n    addTweet(payload: Tweets): Promise<Tweets> {\r\n        return axios\r\n            .post(\r\n                \"https://my-json-server.typicode.com/EvgeniiLapotko/react-twitter/tweets\",\r\n                payload\r\n            )\r\n            .then(({ data }) => data);\r\n    },\r\n};\r\n","import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { fetchApi } from \"../../../services/api/fetchApi\";\r\nimport {\r\n    setStatusRecomendUser,\r\n    setRecomendUsers,\r\n    RecomendUserActionsType,\r\n} from \"./actionsCreators/actionCreators\";\r\nimport { LoadingState } from \"./contracts/types\";\r\n\r\nexport function* fetchRecomendUserRequest(): any {\r\n    try {\r\n        const data = yield call(fetchApi.fetchRecommendUsers);\r\n        yield put(setRecomendUsers(data));\r\n    } catch (error) {\r\n        yield put(setStatusRecomendUser(LoadingState.ERROR));\r\n    }\r\n}\r\nexport function* watchRecomendUserAsync() {\r\n    yield takeEvery(\r\n        RecomendUserActionsType.FETCH_RECOMEND_USER,\r\n        fetchRecomendUserRequest\r\n    );\r\n}\r\n","import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { fetchApi } from \"../../../services/api/fetchApi\";\r\nimport {\r\n    setStatusTags,\r\n    setTags,\r\n    TagsActionsType,\r\n} from \"./actionsCreators/actionCreators\";\r\nimport { LoadingState } from \"./contracts/types\";\r\n\r\nexport function* fetchTagsRequest(): any {\r\n    try {\r\n        const data = yield call(fetchApi.fetchTags);\r\n        yield put(setTags(data));\r\n    } catch (error) {\r\n        yield put(setStatusTags(LoadingState.ERROR));\r\n    }\r\n}\r\nexport function* watchTagsAsync() {\r\n    yield takeEvery(TagsActionsType.FETCH_TAGS, fetchTagsRequest);\r\n}\r\n","import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { fetchApi } from \"../../../services/api/fetchApi\";\r\nimport {\r\n    addTweets,\r\n    FetcFilterTweetsActionInterface,\r\n    FetchAddTweetsActionInterface,\r\n    setStatusAdd,\r\n    setStatusTweets,\r\n    setTweets,\r\n    TweetsActionsType,\r\n} from \"./actionsCreators/actionCreators\";\r\nimport { AddLoadingState, LoadingState } from \"./contracts/types\";\r\n\r\nexport function* fetchTweetsRequest(): any {\r\n    try {\r\n        const data = yield call(fetchApi.fetchTweet);\r\n        yield put(setTweets(data));\r\n    } catch (error) {\r\n        yield put(setStatusTweets(LoadingState.ERROR));\r\n    }\r\n}\r\nexport function* addTweetsRequest({\r\n    payload,\r\n}: FetchAddTweetsActionInterface): any {\r\n    try {\r\n        const data = {\r\n            _id: Math.random().toString(36).substr(2),\r\n            text: payload,\r\n            tag: \"moscow\",\r\n            user: {\r\n                fullname: \"Игорь Лиепас\",\r\n                username: \"@igorkushnarev2\",\r\n                avatar: \"https://pbs.twimg.com/profile_images/1348214579877326854/5GZmXCmd_200x200.jpg\",\r\n            },\r\n        };\r\n        const items = yield call(fetchApi.addTweet, data);\r\n        yield put(addTweets(items));\r\n    } catch (error) {\r\n        yield put(setStatusAdd(AddLoadingState.ERROR));\r\n    }\r\n}\r\n\r\nexport function* fetchFilterTweetsRequest({\r\n    payload: tag,\r\n}: FetcFilterTweetsActionInterface): any {\r\n    try {\r\n        const data = yield call(fetchApi.filterTweets, tag);\r\n\r\n        yield put(setTweets(data));\r\n    } catch (error) {\r\n        yield put(setStatusTweets(LoadingState.ERROR));\r\n    }\r\n}\r\nexport function* watchTweetsAsync() {\r\n    yield takeEvery(TweetsActionsType.FETCH_TWEETS, fetchTweetsRequest);\r\n    yield takeEvery(TweetsActionsType.FETCH_ADD_TWEETS, addTweetsRequest);\r\n    yield takeEvery(\r\n        TweetsActionsType.FETCH_FILTER_TWETS,\r\n        fetchFilterTweetsRequest\r\n    );\r\n}\r\n","import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { fetchApi } from \"../../../services/api/fetchApi\";\r\nimport {\r\n    setStatusSelecteTweet,\r\n    setSelectTweet,\r\n    SelectTweetActionsType,\r\n    FetchSelectTweetActionInterface,\r\n} from \"./actionsCreators/actionCreators\";\r\nimport { LoadingState, Tweet } from \"./contracts/types\";\r\n\r\nexport function* fetchSelectTweetRequest({\r\n    payload: tweetId,\r\n}: FetchSelectTweetActionInterface): any {\r\n    try {\r\n        const data: Tweet[] = yield call(fetchApi.fetchSelectTweet, tweetId);\r\n\r\n        yield put(setSelectTweet(data[0]));\r\n    } catch (error) {\r\n        yield put(setStatusSelecteTweet(LoadingState.ERROR));\r\n    }\r\n}\r\nexport function* watchSelectTweetAsync() {\r\n    yield takeEvery(\r\n        SelectTweetActionsType.FETCH_SELECT_TWEET,\r\n        fetchSelectTweetRequest\r\n    );\r\n}\r\n","import { all } from \"redux-saga/effects\";\r\nimport { watchRecomendUserAsync } from \"./ducks/recomendUsers/saga\";\r\nimport { watchTagsAsync } from \"./ducks/tags/saga\";\r\nimport { watchTweetsAsync } from \"./ducks/tweets/saga\";\r\nimport { watchSelectTweetAsync } from \"./ducks/tweetSelect/saga\";\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchTweetsAsync(),\r\n        watchTagsAsync(),\r\n        watchRecomendUserAsync(),\r\n        watchSelectTweetAsync(),\r\n    ]);\r\n}\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport { rootReduser } from \"./rootReducer\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"./sagas\";\r\nimport { TweetsType } from \"./ducks/tweets/contracts/types\";\r\nimport { TagsType } from \"./ducks/tags/contracts/types\";\r\nimport { RecomendUserType } from \"./ducks/recomendUsers/contracts/types\";\r\nimport { SelectTweetType } from \"./ducks/tweetSelect/contracts/types\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst composeEnhancers =\r\n    (typeof window !== \"undefined\" &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n    compose;\r\n\r\nexport interface RootState {\r\n    tweets: TweetsType;\r\n    tags: TagsType;\r\n    recommendUsers: RecomendUserType;\r\n    selectTweet: SelectTweetType;\r\n}\r\n\r\nexport const store = createStore(\r\n    rootReduser,\r\n    composeEnhancers(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport theme from \"./theme\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <ThemeProvider theme={theme}>\r\n                <Provider store={store}>\r\n                    <App />\r\n                </Provider>\r\n            </ThemeProvider>\r\n        </Router>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}